#!/bin/bash
# set -x

export PATH="/usr/local/opt/gnu-sed/libexec/gnubin:$PATH"

scale=1
search_path="orc_hash_notpartition_lz4_dict08_notpk_numeric_${scale}g"
#search_path="magmaap_hash_notpartition_none_none_notpk_numeric_${scale}g"

# Check NewQE planner support
if [[ -z $(which psql) ]]; then
  exit 1
fi
query_set=`seq 1 99`
if [[ -n "$@" ]]; then
  query_set=$@
  echo "Query Set: $query_set"
fi
for query_idx in $query_set; do
  file="$HOME/dev/hawq/src/test/feature/tpcds/sql/query/${scale}g/stream_1/stream0/query${query_idx}_rept1.sql"
  option=''
  option="${option}set search_path=${search_path};"
  option="${option}set client_min_messages=debug1;set new_executor=auto;"
  option="${option}set optimizer=off;" # disable orca
  # option="${option}set enable_groupagg=off;set gp_enable_fallback_plan=off;"
  option="${option}set enable_groupagg=off;set gp_enable_agg_distinct=off;set gp_enable_sort_distinct = off;"

  ts_start=`date +%s%3N`
  output=$(psql -d tpcds -v ON_ERROR_STOP=1 -P pager=off -v EXPLAIN_ANALYZE="${option}EXPLAIN" -af $file 2>&1)
  ts_end=`date +%s%3N`;
  planner_time=`expr $ts_end - $ts_start`;
  echo "$output" > /dev/null

  mode=$(echo "${output}" | grep 'New executor mode:')
  if [[ -n "$mode" ]]; then mode=1; else mode=0; fi
  if [[ ! -f $file ]]; then mode=''; fi

  plannode=$(echo "${output}" |
            grep 'not support plan ' |
            sed 's|.* not support plan node of {\([^ ]\+\).*}|\1|' |
            cut -c 1-40 | tr '\n' ' ' | xargs echo)

  expression=$(echo "${output}" |
              grep 'not support expression ' |
              sed 's|.* not support expression of {\([^ ]\+\).*}|\1|' |
              cut -c 1-40 | tr '\n' ' ' | xargs echo)
  echo -e "${planner_time}\t${mode}\t${plannode}\t${expression}" # > /dev/null
  if [[ "$query_idx" =~ ^(14|23|24|39)$ ]]; then # these sql files run two queries
    echo -e "${planner_time}\t${mode}\t${plannode}\t${expression}" # > /dev/null
  fi
done

# Compare ORC/Parquet old QE
query_set=''
query_set="${query_set} `seq 1 13`"
query_set="${query_set} `seq 15 22`"
query_set="${query_set} `seq 25 38`"
query_set="${query_set} `seq 40 99`"
if [[ -n "$@" ]]; then
  query_set=$@
fi
for query_idx in $query_set; do
  file="$HOME/dev/hawq/src/test/feature/tpcds/sql/query/${scale}g/stream_1/stream0/query${query_idx}_rept1.sql"
  # echo $file
  echo "Running $query_idx ..."
  check_error=0
  option=''
  option="${option}set new_executor=off;"
  option="${option}set optimizer=off;" # disable orca
  option="${option}set enable_groupagg=off;set gp_enable_agg_distinct=off;set gp_enable_sort_distinct = off;"
  option="${option}set orc_enable_filter_pushdown=off;"
  # option="${option}set enforce_virtual_segment_number = 1;"

  # enable ORCA for problematic query
  [[ "$query_idx" =~ ^(10|35|64|95)$ ]] && option="${option}set optimizer=on;"

  output_orc_new=$(psql -d tpcds -v ON_ERROR_STOP=1 -P pager=off -v EXPLAIN_ANALYZE="${option};set new_executor=on;set search_path=${search_path};EXPLAIN ANALYZE" -f $file)
  check_error=$(($check_error+$?))
  output_orc_old=$(psql -d tpcds -v ON_ERROR_STOP=1 -P pager=off -v EXPLAIN_ANALYZE="${option};set new_executor=off;set search_path=${search_path};EXPLAIN ANALYZE" -f $file)
  check_error=$(($check_error+$?))
  # output_parquet=$(psql -d tpcds -v ON_ERROR_STOP=1 -P pager=off -v EXPLAIN_ANALYZE="${option};set search_path=parquet_hash_notpartition_snappy_none_notpk_numeric_${scale}g;EXPLAIN ANALYZE" -f $file)

  if [[ $check_error -gt 0 ]]; then echo; continue; fi

  echo "Checking $query_idx ..."
  echo "$output_orc_new"     > /tmp/orc_new.txt
  echo "$output_orc_old"     > /tmp/orc_old.txt
  echo "$output_parquet"     > /tmp/parquet.txt
  # hawq_analyze.py /tmp/orc_old.txt /tmp/parquet.txt
  hawq_analyze.py /tmp/orc_old.txt /tmp/orc_new.txt 
  echo
done
